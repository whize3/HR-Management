<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="HbLib">
	
	<!-- 도서구입신청  -->
	<!-- 도서검색  -->
	<select id="booklist" parameterType="map" resultType="com.hb.mybatis.BookVO">
		select * from book
	      <choose>
	      	<when test="idx ==0"></when>
	      	<when test="idx ==1">where writer like '%' || #{keyword} || '%' </when>
	      	<when test="idx ==2">where publisher like '%' || #{keyword} || '%' </when>
	      	<when test="idx ==3">where b_subject   like '%' || #{keyword} || '%' </when>
	      	<when test="idx ==4">where category like '%' || #{keyword} || '%'</when>
	      </choose>
	</select>
	<!-- 상세보기  -->
		 <select id="deti" parameterType="String" resultType="com.hb.mybatis.BookVO"> 
			select * from book where  b_num = #{b_num}		
		</select> 
		
	<!-- 랭킹  -->
	<select id="ranking" resultType="com.hb.mybatis.Book_rankVO">
		select a.*,b.b_subject,b.writer,b.s_url from 
		(select count(b_num) rank,b_num from book_draw where bd_date >= sysdate-15 
		group by b_num) a, book b where b.b_num = a.b_num order by rank desc
	</select>

	
	<!-- 신규도서 리스트  -->
	<select id="newbook" resultType="com.hb.mybatis.BookVO">
		select * from book where b_date> sysdate-90
	</select>
	<select id="newbookstate1" resultType="Integer" parameterType="String">
		select count(b_state) from book_draw where b_num=#{b_num} and b_state=1
	</select>
	<select id="newbookstate2" resultType="Integer" parameterType="String">
		select count(b_state) from book_draw where b_num=#{b_num} and b_state=2
	</select>
	
	

	<!-- 책 구입신청  -->

		<insert id="apply" parameterType="com.hb.mybatis.Book_ApplyVO">
			insert into book_apply values(book_apply_seq.nextval, 0, sysdate, #{id}, #{b_subject}, #{publisher}, #{writer}, #{category}, #{isbn}, #{s_url},#{l_url},'')
		</insert>
		<!-- 로그인  -->

		<select id="login" parameterType="com.hb.mybatis.UsersVO" resultType="com.hb.mybatis.UsersVO">
			select * from users where id=#{id} and pwd=#{pwd}
		</select>
	<select id="getmydraw" resultType="com.hb.mybatis.MyDrawVO" parameterType="String">
		select a.bd_date,b.isbn,b.writer,b.b_subject from (select id,b_num,bd_date,b_state from book_draw where id=#{id}) a , book b where a.b_num = b.b_num and a.b_state='1'
	</select>
	<select id="getmyreserve" resultType="com.hb.mybatis.MyDrawVO" parameterType="String">
		select * from book where b_num in (select b_num from book_draw where id=#{id} and b_state='2')
	</select>
	<select id="getmyreserve_cnt" resultType="String" parameterType="String">
		select count(bd_date) from book_draw where b_state='1' and b_num=#{b_num}
	</select>
	<select id="getmyreserve_chk" resultType="com.hb.mybatis.MyDrawVO" parameterType="String">
		select bd_date+15 bd_date from book_draw where b_state='1' and b_num=#{b_num}
	</select>
	<select id="getmyhistory" resultType="com.hb.mybatis.MyDrawVO" parameterType="Map">
		select * from ( select rownum r_num, q.* from ( select a.bd_redate,b.isbn,b.writer,b.b_subject from 
(select id,b_num,bd_redate,b_state from book_draw where id=#{id} order by bd_redate desc) a , 
book b where a.b_num = b.b_num and a.b_state='0' order by bd_redate desc) q order by bd_redate desc) where r_num between #{begin} and #{end} 
	</select>
	<select id="getmycomment" resultType="com.hb.mybatis.MyDrawVO" parameterType="String">
		select b.bc_idx,a.b_subject,b.bc_date,a.b_num from (select b_num, b_subject from book where b_num in(select b_num from b_comment where id=#{id})) a, b_comment b where a.b_num=b.b_num
	</select>
	<select id="getmycommentcnt" resultType="String" parameterType="String">
		select count(*) from b_comment where id=#{id}
	</select>
	<select id="getmyinfo" resultType="com.hb.mybatis.UsersVO" parameterType="String">
		select * from users where id = #{id}
	</select>
	<update id="getmyinfoupdate" parameterType="Map">
		update users set 
		<choose>
			<when test="changetype.equals('change_pwd')"> pwd=#{pwd} where id=#{id}</when>
			<when test="changetype.equals('change_email')"> email=#{email} where id=#{id}</when>
			<when test="changetype.equals('change_tel')"> tel=#{tel} where id=#{id}</when>
		</choose>
	</update>
		<select id="getjoincheckid" parameterType="String" resultType="com.hb.mybatis.UsersVO">
		select * from users where id = #{id}
	</select>
	<insert id="usersjoin" parameterType="com.hb.mybatis.UsersVO">
		insert into users values(#{id},#{name},#{pwd},#{jumin},#{email},#{tel},#{addr})
	</insert>

	<!-- 로그인시 대출/예약/연체 도서 정보  -->
	<select id="loginbook" parameterType="com.hb.mybatis.UsersVO" resultType="com.hb.mybatis.UsersVO">
		select count(case when id=#{id} and b_state='1' then 1 else null end)draw, count(case when id=#{id} and b_state='2' then 1 else null end)reserve, count(case when id=#{id} and b_state='1' and sysdate>bd_redate then 1 else null end)overdue from book_draw
	</select>
	
	<!--도서구입신청현황 리스트 -->
	<select id="applylist" parameterType="String" resultType="com.hb.mybatis.Book_ApplyVO">
		select * from book_apply where id=#{id} order by ba_idx
	</select>

	<!-- 랭킹  -->
	<select id="">
		select a.*,b.b_subject,b.writer,b.img_url from (select count(b_num) rank,b_num from book_draw where bd_date >= sysdate-15 group by b_num) a, book b where b.b_num = a.b_num order by rank desc;
	</select>

	<select id="historytotalCount" resultType="int" parameterType="String">
		select count(*) from book_draw where id=#{id} and b_state='0'
	</select>
	<select id="yul" resultType="com.hb.mybatis.YulVO">
		select * from yul order by y_idx
	</select>

	
	<!-- 아이디 찾기  -->
	<select id="forgotid" parameterType="com.hb.mybatis.UsersVO" resultType="com.hb.mybatis.UsersVO">
		select * from users where name=#{name} and jumin=#{jumin}	
	</select>
	<!-- 비밀번호 찾기  -->
	<select id="forgotpwd" parameterType="com.hb.mybatis.UsersVO" resultType="com.hb.mybatis.UsersVO">
		select * from users where name=#{name} and jumin=#{jumin} and id=#{id}	
	</select>
	
	<!-- 스터디룸 정보 가져오기 -->
	<select id="getRoom" resultType="com.hb.mybatis.StudyroomVO">
		select * from studyroom order by s_num
	</select>
	<!-- 스터디룸 예약 접수 -->
	<insert id="reserve" parameterType="com.hb.mybatis.Studyroom_ReserveVO">
		insert into studyroom_reserve values(sr_seq.nextval, #{s_num},#{start_time},#{end_time},#{id},#{sr_state},#{sr_date})
	</insert>
	<!-- 예약된 시간 가져오기 -->	
	<select id="getTime" resultType="com.hb.mybatis.Studyroom_ReserveVO" parameterType="Map">
		select start_time, end_time from studyroom_reserve where sr_date=#{date} and s_num=#{s_num}
	</select>
	<!-- 예약결과 가져오기 -->	
	<select id="getResult" resultType="com.hb.mybatis.Studyroom_ReserveVO" parameterType="com.hb.mybatis.Studyroom_ReserveVO">
		select * from studyroom_reserve where id=#{id} and sr_date=#{sr_date} and start_time=#{start_time} and end_time=#{end_time} and s_num=#{s_num} and sr_state='1'
	</select>
	
	<!-- 공지사항 가져오기  -->
	<select id="noticelist" resultType="com.hb.mybatis.NoticeVO">
		select * from notice
	</select>
	<!-- 공지사항 하나 가져오기  -->
	<select id="onenotice" parameterType="String" resultType="com.hb.mybatis.NoticeVO">
		select * from notice where n_idx=#{n_idx}
	</select>
	<!-- 공지사항 hit 수 업데이트  -->
	<update id="noticehit" parameterType="com.hb.mybatis.NoticeVO">
		update notice set n_hit = #{n_hit} where n_idx = #{n_idx}
	</update>
	
	<!-- qna 총 게시물 수 -->
	<select id="qnalistcount" resultType="int">
		select count(*) from qna
	</select>
	<!-- qna 리스트 -->
	<select id="qnalist" parameterType="Map" resultType="com.hb.mybatis.QnaVO">
		select * from (select rownum r_num, a.* from(
			select * from qna order by q_idx desc) a
			) where r_num between #{begin} and #{end}
	</select>
	<!-- 메인에서 qna리스트  -->
	<select id="m_qnalist" resultType="com.hb.mybatis.QnaVO">
		select * from qna order by q_idx desc
	</select>
	<!-- QNA 하나 가져오기  -->
	<select id="oneqna" parameterType="String" resultType="com.hb.mybatis.QnaVO">
		select * from qna where q_idx=#{q_idx}
	</select>
	<!-- QNA COMMENT 가져오기  -->
	<select id="qclist" parameterType="Map" resultType="com.hb.mybatis.Q_CommentVO">
		select * from q_comment where q_idx=#{q_idx}
	</select>
	<!-- qna hit 수 업데이트  -->
	<update id="qnahit" parameterType="com.hb.mybatis.QnaVO">
		update qna set qa_hit = #{qa_hit} where q_idx = #{q_idx}
	</update>
	<!-- QNA 수정하기  -->
	<update id="qnamodify" parameterType="com.hb.mybatis.QnaVO">
		update qna set qa_subject = #{qa_subject}, qa_content = #{qa_content} where q_idx = #{q_idx}
	</update>
	<!-- QNA 삭제 -->
	<delete id="qnadelete" parameterType="String">
		delete from qna where q_idx=#{q_idx}
	</delete>
	<!-- QNA 글쓰기 -->
	<insert id="qnawrite" parameterType="com.hb.mybatis.QnaVO">
		insert into qna values(qna_seq.nextval, #{qa_subject}, #{id}, #{qa_content}, '1', sysdate)
	</insert>
	<!-- QNA COMMENT 쓰끼  -->
	<insert id="qcommentwrite" parameterType="com.hb.mybatis.Q_CommentVO">
		insert into q_comment values(q_comment_seq.nextval,#{q_idx},#{id},#{qc_content},sysdate)
	</insert>
	
	<select id="bookComment" resultType="com.hb.mybatis.B_CommentVO" parameterType="String">
		select * from b_comment where b_num = #{b_num}
	</select>
	

	<!-- admin -->
	<!-- 로그인 비교 -->
	<select id="adminLogin" parameterType="com.hb.mybatis.AdminVO" resultType="com.hb.mybatis.AdminVO">
		select * from admin where id = #{id} and pwd= #{pwd}
	</select>
	<!-- 회원 총 카운트 -->
	<select id="a_memberTotalCount" resultType="int">
		select count(*) from users
	</select>
	<!-- 회원정보 리스트 -->
	<select id="a_memberlist" parameterType="Map" resultType="com.hb.mybatis.UsersVO">
		select * from ( 
            select rownum r_num, a.* from (
            	select * from users
            	) a 
              ) where r_num between #{begin} and #{end}
	</select>
	<!-- 회원정보 -->
	<select id="a_memberonelist" parameterType="String" resultType="com.hb.mybatis.UsersVO">
		select * from users where id = #{id}
	</select>
	<!-- 회원 검색 -->
	<select id="a_memberSearch" parameterType="Map" resultType="com.hb.mybatis.UsersVO">
		select * from users
		<choose>
			<when test="category==1">where id = #{id}</when>
			<when test="category==2">where name = #{name}</when>
			<when test="category==3">where jumin = #{jumin}</when>
		</choose>
	</select>
	<!-- 회원 대출현황 리스트 -->
	<select id="a_bookMemberList" parameterType="String" resultType="com.hb.mybatis.BookDraw_memberVO">
		select a.*,b.b_subject,b.publisher,b.isbn from (select bd_date, b_state,b_num  from book_draw where id=#{id}) a , book b where a.b_num = b.b_num and a.b_state='1'
	</select>
	<!-- 회원 예약현황 리스트 -->
	<select id="a_bookReserve" parameterType="String" resultType="com.hb.mybatis.BookDraw_memberVO">
		select * from book where b_num in (select b_num from book_draw where id=#{id} and b_state='2')
	</select>
	<select id="a_bookReserve_cnt" parameterType="String" resultType="String">
		select count(bd_date) from book_draw where b_state='1' and b_num=#{b_num}
	</select>
	<select id="a_bookReserve_chk" parameterType="String" resultType="com.hb.mybatis.BookDraw_memberVO">
		select * from book_draw where b_state='1' and b_num=#{b_num}
	</select>

	<!-- 책 총 권수 -->
	<select id="a_bookListCount" resultType="int">
		select count(*) from book
	</select>
	<select id="a_booklist" parameterType="Map" resultType="com.hb.mybatis.BookVO">
		select * from (select rownum r_num, a.* from(
			select * from book order by b_num desc) a
			) where r_num between #{begin} and #{end}
	</select>
	<!-- 도서 추가 -->
	<insert id="a_bookAdd" parameterType="com.hb.mybatis.BookVO">
		insert into book values(book_seq.nextval,#{b_subject},#{b_location},#{publisher},#{writer},#{category},#{ISBN},#{s_url},#{l_url},sysdate)
	</insert>
	<!-- 희망도서 -->
	<select id="a_applyBookCount" resultType="int">
		select count(*) from book_apply
	</select>
	<select id="a_applyBookList" parameterType="Map" resultType="com.hb.mybatis.Book_ApplyVO">
		select * from (select rownum r_num, a.* from(
			select * from book_apply) a
			) where r_num between #{begin} and #{end}
	</select>
	<!-- 희망도서 검색 -->
	<select id="a_applyOnelist" resultType="com.hb.mybatis.Book_ApplyVO" parameterType="String">
		select * from book_apply where ba_idx = #{ba_idx}
	</select>
	<!-- 희망도서 상태 변경 -->
	<update id="a_applyState" parameterType="String">
		update book_apply set ba_state = '1' where ba_idx = #{ba_idx}
	</update>
	<!-- 희망도서 책에 추가하기 -->
	<insert id="a_bookApplyAdd" parameterType="com.hb.mybatis.BookVO">
		insert into book values(book_seq.nextval,#{b_subject},#{b_location},#{publisher},#{writer},#{category},#{ISBN},#{s_url},#{l_url})
	</insert>
	<!-- 희망도서 거절 사유 -->
	<update id="a_bookApplyRefuseAp" parameterType="com.hb.mybatis.Book_ApplyVO">
		update book_apply set refuse_reason=#{refuse_reason} , ba_state = '2' where ba_idx=#{ba_idx}
	</update>
	<!-- 공지사항 총 게시물 수 -->
	<select id="a_noticeListCount" resultType="int">
		select count(*) from notice
	</select>
	<!-- 공지사항 리스트 -->
	<select id="a_noticeList" parameterType="Map" resultType="com.hb.mybatis.NoticeVO">
		select * from (select rownum r_num, a.* from(
			select * from notice order by n_idx desc) a
			) where r_num between #{begin} and #{end}
	</select>
	<!-- 공지사항 게시물 추가 -->
	<insert id="a_noticeAdd" parameterType="com.hb.mybatis.NoticeVO">
		insert into notice values (notice_seq.nextval,#{n_subject},#{n_content},0,sysdate)
	</insert>
	<!-- 스터디룸 현황 가져오기  -->
	<select id="studyroomstate" resultType="com.hb.mybatis.Studyroom_ReserveVO">
		select * from studyroom_reserve where (select to_char(sysdate,'hh24:mi') from dual) > start_time and end_time > (select to_char(sysdate,'hh24:mi')from dual) and sr_state=2
	</select>
	
	</mapper>